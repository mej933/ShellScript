#! /usr/bin/env bash

# chkconfig: 2345 80 05
# description: MongoDB Community Server Daemon
# processname: mongod
# config: /etc/mongodb/mongod.conf
# pidfile: /var/run/mongodb/mongod.pid

### Initialization Info Start
# Creator:           MaxdSre
# Required-Start:    $all
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start mongodb server daemon at boot time
### Initialization Info End

### Parameters Default Configuraton Start
NAME=mongod
DESC='MongoDB Community Server Daemon'
USER=mongodb
GROUP=mongodb
DAEMON_DIR=/opt/MongoDB/bin
DAEMON=${DAEMON_DIR}/${NAME}
CONF_DIR=/etc/mongodb
CONF_FILE=${CONF_DIR}/mongod.conf
SYS_CONFIG=/etc/sysconfig/${NAME}
LOG_DIR=/var/log/mongodb
LOG_FILE=${LOG_DIR}/${NAME}.log
PID_DIR=/var/run/mongodb
PID_FILE=${PID_DIR}/${NAME}.pid
LOCK_FILE=/var/lock/subsys/${NAME}
DATA_DIR=/var/lib/mongodb
### Parameters Default Configuraton End

# Check daemon if exists or executable
if [ ! -x ${DAEMON} ]; then
  echo "Program not installed or not executable"
  exit 5
fi

# init.d / servicectl compatibility (openSUSE)
if [[ -f /etc/rc.status ]]; then
    . /etc/rc.status
    rc_reset
fi

# Source function library. (status/pidofproc/...)
[[ -f /etc/rc.d/init.d/functions ]] && . /etc/rc.d/init.d/functions

# Overwrite settings from default file
[[ -e ${SYS_CONFIG} ]] && . ${SYS_CONFIG}

DAEMON_OPTS="--config ${CONF_FILE} &"

function check_status() {
    status ${NAME} > /dev/null 2>&1
}

function check_is_root() {
    if [[ $(id -u) -ne 0 ]]; then
        echo "You need root privileges to run this script"
        exit 4
    fi
}

function perparation() {
    if [[ ! -d "${PID_DIR}" ]]; then
        install -d -m 0755 -o "${USER}" -g "${GROUP}" "${PID_DIR}"
    fi

    if [[ -f "${PID_FILE}" ]]; then
        echo "Error starting mongod. ${PIDFILEPATH} exists."
        RETVAL=1
        return
    fi

    # Recommended ulimit values for mongod or mongos
    # See http://docs.mongodb.org/manual/reference/ulimit/#recommended-settings
    #
    ulimit -f unlimited
    ulimit -t unlimited
    ulimit -v unlimited
    ulimit -n 65535
    ulimit -m unlimited
    ulimit -u 65535
    ulimit -l unlimited

    # https://docs.mongodb.com/master/tutorial/transparent-huge-pages/
    transparent_hugepage_dir='/sys/kernel/mm/transparent_hugepage'

    if [[ -d /sys/kernel/mm/redhat_transparent_hugepage ]]; then
        transparent_hugepage_dir='/sys/kernel/mm/redhat_transparent_hugepage'
    fi

    if [[ -d "${transparent_hugepage_dir}" ]]; then
        echo 'never' > "${transparent_hugepage_dir}"/enabled
        echo 'never' > "${transparent_hugepage_dir}"/defrag
        khugepaged_defrag_path="${transparent_hugepage_dir}/khugepaged/defrag"

        if [[ -s "${khugepaged_defrag_path}" ]]; then
            # rhel 7
            khugepaged_defrag_val=0
            # rhel 6
            khugepaged_regexp='^[0-1]+$'
            [[ $(cat ${khugepaged_defrag_path}) =~ $khugepaged_regexp ]] || khugepaged_defrag_val='no'
            echo "${khugepaged_defrag_val}" > ${khugepaged_defrag_path}
            unset khugepaged_defrag_val
            unset khugepaged_regexp
        fi
        unset khugepaged_defrag_path
    fi
    unset transparent_hugepage_dir
}


function start() {
    check_is_root
    check_status
    if [[ $? -eq 0 ]]; then
      echo "${NAME} is already running."
      exit 0
    fi
    perparation

    # Start Daemon
    echo -n $"Starting ${NAME}: ..."
    daemon ${DAEMON} ${DAEMON_OPTS}
    return=$?
    echo
    echo $(pidofproc ${NAME}) > ${PID_FILE}
    exit $return
}

function stop() {
    check_is_root
        echo -n "Stopping $NAME: ..."
        killproc ${NAME} -QUIT
        [[ $? -eq 0 ]] && rm -f "${PID_FILE}" "${LOCK_FILE}"
        echo
}

case "$1" in
    status )
        status -p ${PID_FILE} ${NAME}
        exit $?
        ;;
    start )
        start
        ;;
    stop )
        stop
        ;;
    restart|force-reload )
        if [[ -f "${PID_FILE}" ]]; then
            $0 stop
            usleep 15000
        fi
        $0 start
        ;;
    * )
        echo "Usage: $0 {start|stop|restart|force-reload|status}"
        exit 3
        ;;
esac

# Script End
