# default path /etc/nginx/conf.d/ssl.conf

# redirect http to https
server {
    listen 80;
    server_name maxdsre.com;
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl default_server;
	server_name maxdsre.com;
    #access_log  /var/log/nginx/log/host.access.log  main;
    root   /usr/share/nginx/html;

    location / {
        root   /usr/share/nginx/html;
        # add index.php
        index index.php index.html index.htm;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    # error_page   500 502 503 504  /50x.html;
    # location = /50x.html {
    #    root   /usr/share/nginx/html;
    #}

    # PHP Parse Start
	# location ~ \.php$ {
    # 	 try_files $uri = 404;
    #	 root   /usr/share/nginx/html;
    #    # According specific condition
    #    #fastcgi_pass   127.0.0.1:9000;
    #	 fastcgi_pass unix:/var/run/php/php-fpm.sock;
    #	 fastcgi_index index.php;
    #	 #fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #	 fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    #	 include fastcgi_params;
	# }
    # PHP Parse End

    ssl_certificate /etc/nginx/ssl/fullchain.pem;
	ssl_certificate_key /etc/nginx/ssl/privkey.pem;
    ssl_dhparam /etc/nginx/ssl/dhparam.pem;
    ssl_protocols TLSv1.2;
    ssl_prefer_server_ciphers on;
    #https://scotthelme.co.uk/doing-the-chacha-with-nginx/
    ssl_ciphers "ECDHE-ECDSA-CHACHA20-POLY1305 ECDHE-RSA-CHACHA20-POLY1305 EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH DHE-RSA-CHACHA20-POLY1305 EDH+aRSA !aNULL !eNULL !LOW !3DES !MD5 !EXP !PSK !SRP !DSS !RC4 !SEED !CAMELLIA";
    # Specifies a curve for ECDHE ciphers.
    ssl_ecdh_curve secp384r1;
    ssl_session_cache    shared:SSL:10m;
    ssl_session_timeout  10m;
    ssl_session_tickets on;
    #the list of certificates will not be sent to clients
    ssl_session_ticket_key /etc/nginx/ssl/ticket.key;

    #OCSP Stapling Configuration
    ssl_stapling on;
    # Enables verification of OCSP responses by the server
    ssl_stapling_verify on;
    #Let's Encrypt Root and Intermediate Certificates
    ssl_trusted_certificate /etc/nginx/ssl/letsencrypt-ca-cert.pem;

    # Google DNS, Open DNS, Dyn DNS
    resolver 8.8.8.8 8.8.4.4 208.67.222.222 208.67.220.220 216.146.35.35 216.146.36.36 valid=300s;
    resolver_timeout 5s;

    add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload";
    add_header Content-Security-Policy 'default-src self';
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "DENY";
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Robots-Tag none;
    add_header X-Download-Options noopen;
    add_header X-Permitted-Cross-Domain-Policies none;
    add_header Public-Key-Pins 'pin-sha256="iUUgoZuZgkGIbQ9x1lUQbvCJh+87iT1avjyzKKu7K3k=";pin-sha256="F2gQEUpXylr1jmAr6f9WNlFAMxORt597saJMqGCcoks="; max-age=2592000; includeSubDomains';

    #if ($scheme = http) {
    #    return 301 https://$host$request_uri;
    #}

    #check file exists or not http://nginx.org/en/docs/http/ngx_http_core_module.html#try_files
    #location / {
    #    try_files $uri $uri/ =404;
    #}

    # Disable unwanted HTTP methods
    # Allow GET, PUT, POST; return "405 Method Not Allowed" for all others.
    if ($request_method !~ ^(GET|HEAD|POST)$ ) {
        return 405;
    }

    # Deny Certain User-Agents or Bots:
    if ($http_user_agent ~* LWP::Simple|wget|curl|libwww-perl) {
        return 403;
    }

    if ($http_user_agent ~ (msnbot|Purebot|Baiduspider|Lipperhey|Mail.Ru|scrapbot) ) {
        return 403;
    }

    # Blocking Referral Spam
    if ( $http_referer ~* (jewelry|viagra|nude|girl|nudit|casino|poker|porn|sex|teen|babes) ) {
     return 403;
     }

    #  Stop Hotlinking
    # location ~ .(gif|png|jpe?g)$ {
    #     valid_referers none blocked maxdsre.com *.maxdsre.com;
    #     if ($invalid_referer) {
    #         return   403;
    #     }
    # }

    # Deny execution of scripts
    # deny scripts inside writable directories
    # location ~* /(images|cache|media|logs|tmp)/.*.(php|pl|py|jsp|asp|sh|cgi)$ {
    #     return 403;
    #     error_page 403 /403_error.html;
    # }

    # file cache
    # location ~* .(woff|eot|ttf|svg|mp4|webm|jpg|jpeg|png|gif|bmp|ico|css|js)$ {
    #   expires 365d;
	# 	log_not_found off;
	# 	access_log off;
    # }
	# location ~ ^/favicon\.ico$ {
	# 	root /usr/share/nginx/html;
	# }

    # http://nginx.org/en/docs/http/ngx_http_stub_status_module.html
    location /nginx_status {
        stub_status on;
        access_log off;
        #allow xxx.xxx.xxx.xxx; # allowed accessing IP
        allow 127.0.0.1;
        deny all;
    }

    # https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_purge
    local /purge_cache(/.*) {
        proxy_cache_purge custom_cache $1$is_args$args;
        access_log off;
        allow 127.0.0.1;
        deny all;
    }

}
